## api ##

# log_format fullLog '$http_x_forwarded_for - $remote_user [$time_local] "$host" "$request" '
#             '$status $body_bytes_sent "$http_referer" '
#             '"$http_user_agent" $request_time';

server {
    listen 80;
    listen [::]:80;
    server_name www.mrzenw.com;
    rewrite ^/$ https://mrzenw.com redirect; 
}

server {
    listen 80;
    server_name mrzenw.com;

    index index.html index.htm;

    access_log /var/log/nginx/mrzenw.com--access.log  fullLog;
    error_log /var/log/nginx/mrzenw.com--error.log;

    client_max_body_size 100m;

    # listen 443 ssl;
    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # # https://ssl-config.mozilla.org/#server=nginx&server-version=1.17.0&config=old&openssl-version=1.0.1c
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA;
    # ssl_prefer_server_ciphers on;
    # ssl_dhparam /etc/nginx/ssl/mrzenw.com/ssl-config.mozilla.org_ffdhe2048.txt__dhparam.pem;
    # ssl_certificate /etc/nginx/ssl/mrzenw.com/ssl_bundle.crt;
    # ssl_certificate_key /etc/nginx/ssl/mrzenw.com/_downloaded.private.key;

    location /static/ {
        # if ($request_method ~ '(GET|POST|PUT|PATCH|HEAD|DELETE)') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Origin' $http_origin;
            add_header 'Access-Control-Allow-Methods' '*';
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';
        # }
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Origin' $http_origin;
            add_header 'Access-Control-Allow-Methods' '*';
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;

            # https://github.com/axios/axios/issues/888
            # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age
            add_header 'Access-Control-Max-Age' '600';
            return 204;
        }
        expires 60s;
        root /var/www/mrzenw_front_end_reactjs_template/production/;
    }

    location / {
        root /var/www/mrzenw_front_end_reactjs_template/production/dist/;
        # First attempt to serve request as file, then
        # as directory, then fall back to redirecting to index.html
        # try_files $uri $uri/ @root;
        # expires 1d;

        # kill cache
        # add_header Last-Modified $date_gmt;
        # add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        # expires off;

        expires 60s;

        add_header Pragma public;
        add_header Cache-Control "public";
        try_files $uri $uri/ /index.html;
    }
}
